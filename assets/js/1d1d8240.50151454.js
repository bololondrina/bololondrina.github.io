"use strict";(self.webpackChunkifood_github_io=self.webpackChunkifood_github_io||[]).push([[553],{7992:(e,t,i)=>{i.r(t),i.d(t,{default:()=>h});var s=i(6540),o=i(781),n=i(4586),c=i(53),a=i(1432);const r={center_btn:"center_btn_fWyL",buttonless:"buttonless_OjuJ"};var l=i(5925),d=i(4848);function h(){const{siteConfig:e}=(0,n.A)(),[t,i]=(0,s.useState)(""),h=(0,s.useMemo)((()=>new l.C(e)),[]);return(0,s.useEffect)((()=>{(async()=>{const e=await h.getClaText();i(e)})()}),[]),(0,d.jsx)(o.A,{title:"Contributor license agreement",description:"Find out about all of the projects of iFood Open Source.",children:(0,d.jsxs)("main",{className:"padding-top--lg padding-bottom--xl",children:[(0,d.jsx)("div",{className:"container",children:(0,d.jsx)("div",{className:"row",children:(0,d.jsxs)("div",{className:"col",children:[(0,d.jsx)("h1",{children:"Contributing to iFood Open Source Projects"}),(0,d.jsx)("p",{children:"Welcome to the iFood Open Source contributor license agreement (CLA). iFood requires that all contributions to its projects are accompanied by a signed CLA before the contributions can be accepted for iFood projects."})]})})}),(0,d.jsx)("div",{className:"container",children:(0,d.jsx)("div",{className:"row",children:(0,d.jsx)("div",{className:"col col--12",children:(0,d.jsx)(a.A,{className:r.buttonless,children:t})})})}),(0,d.jsx)("div",{className:"container margin-top--lg",children:(0,d.jsx)("div",{className:"row",children:(0,d.jsx)("div",{className:(0,c.A)("col col--12 center-btn",r.center_btn),children:t&&(0,d.jsx)("a",{href:h.getGHCodeUrl(),className:"button button--primary",children:"Accept with GitHub"})})})})]})})}},5925:(e,t,i)=>{i.d(t,{C:()=>n});var s=i(2505),o=i.n(s);class n{constructor(e){this.siteConfig=e,this.env=e.customFields,this.api=o().create({baseURL:this.env.ifoodServiceUrl})}getGHCodeUrl(){return`${this.env.githubUrl}/authorize?scope=user:email&client_id=${this.env.githubClientId}&redirect_uri=${this.siteConfig.url}/auth`}async getClaText(){const{data:e}=await o().get(this.env.claUrl);return e}async signCla(e){let t=!1;try{const{data:i}=await this.api.post("/github/login",{code:e}),{data:s}=await this.api.post("/contributor",{},{headers:{authorization:i}});t=!0}catch(i){console.log(i)}return t}}}}]);